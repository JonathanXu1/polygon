generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                   Int       @id @default(autoincrement())
  compound_id          String    @unique @db.VarChar(255)
  user_id              Int
  provider_type        String    @db.VarChar(255)
  provider_id          String    @db.VarChar(255)
  provider_account_id  String    @db.VarChar(255)
  refresh_token        String?
  access_token         String?
  access_token_expires DateTime? @db.Timestamptz(6)
  created_at           DateTime  @default(now()) @db.Timestamptz(6)
  updated_at           DateTime  @default(now()) @db.Timestamptz(6)

  @@index([provider_account_id], name: "provider_account_id")
  @@index([provider_id], name: "provider_id")
  @@index([user_id], name: "user_id")
}

model sessions {
  id            Int      @id @default(autoincrement())
  user_id       Int
  expires       DateTime @db.Timestamptz(6)
  session_token String   @unique @db.VarChar(255)
  access_token  String   @unique @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)
}

model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model users {
  id             Int        @id @default(autoincrement())
  name           String?    @db.VarChar(255)
  email          String?    @unique @db.VarChar(255)
  email_verified DateTime?  @db.Timestamptz(6)
  image          String?
  created_at     DateTime   @default(now()) @db.Timestamptz(6)
  updated_at     DateTime   @default(now()) @db.Timestamptz(6)
  language       String     @default("en-US")
  snippets       snippets[]
  videos         videos[]   @relation("VideoCreator")
  savedVideos    videos[]   @relation("SavedVideo")
}

model verification_requests {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(255)
  token      String   @unique @db.VarChar(255)
  expires    DateTime @db.Timestamptz(6)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
}

model videos {
  id                Int      @id @default(autoincrement())
  creator           Int
  title             String
  description       String?
  created           DateTime @default(now()) @db.Timestamptz(6)
  transcription_url String?
  annotation_url    String?
  url               String?
  transcribe_state  String   @default("pending")
  annotate_state    String   @default("pending")
  cuid              String   @unique
  transcode_state   String   @default("pending")
  upload_state      String   @default("pending")
  views             Int      @default(0)
  language          String?
  duration          Float?
  thumbnail_url     String?
  isPublic          Boolean  @default(true)
  useSubtitles      Boolean  @default(true)
  user              users    @relation("VideoCreator", fields: [creator], references: [id])
  savedBy           users[]  @relation("SavedVideo")
  snippets       snippets[]
}

model snippets {
  id          Int      @id @default(autoincrement())
  user_id     Int
  video_id     Int
  time        Float?
  created     DateTime @default(now()) @db.Timestamptz(6)
  original    String
  translation String
  user        users    @relation(fields: [user_id], references: [id])
  video        videos    @relation(fields: [video_id], references: [id])
}

model waitlist {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  created_at DateTime @default(now()) @db.Timestamptz(6)
}
